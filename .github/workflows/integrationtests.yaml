name: Integration Tests

on:
  push:
    branches: [ main ]
  pull_request_target:

jobs:

  Azure-Storage-Integration-Test:
    runs-on: ubuntu-latest

    env:
      RUN_INTEGRATION_TEST: true

    services:
      azurite:
        image: mcr.microsoft.com/azure-storage/azurite
        ports:
          - 10000:10000
        env:
          AZURITE_ACCOUNTS: account1:key1;account2:key2

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'gradle'

      - name: Data Plane Azure Storage Test
        run: ./gradlew extensions:azure:data-plane-azure-storage:check

      - name: Object Storage StatusChecker Test
        run: ./gradlew extensions:azure:blobstorage:blob-provision:check

  Azure-CosmosDB-Integration-Test:
    # run only on upstream repo (requires secret access)
    if: github.repository_owner == 'eclipse-dataspaceconnector'
    runs-on: ubuntu-latest

    env:
      RUN_INTEGRATION_TEST: true
      COSMOS_KEY: ${{ secrets.COSMOS_KEY }}

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'gradle'

      - name: CosmosDB Transfer Process Store Test
        run: ./gradlew extensions:azure:cosmos:transfer-process-store-cosmos:test

      - name: Cosmos-based Asset Index test
        run: ./gradlew extensions:azure:cosmos:assetindex-cosmos:test

      - name: Cosmos-based FCN Directory test
        run: ./gradlew extensions:azure:cosmos:transfer-process-store-cosmos:test

      - name: Cosmos-based ContractDefinitionStore Test
        run: ./gradlew extensions:azure:cosmos:contract-definition-store-cosmos:test

      - name: Cosmos-based ContractNegotiationStore Test
        run: ./gradlew extensions:azure:cosmos:contract-negotiation-store-cosmos:test

  Aws-Integration-Test:
    runs-on: ubuntu-latest

    services:
      minio:
        image: bitnami/minio:latest
        ports:
          - 9000:9000
        env:
          MINIO_ACCESS_KEY: root
          MINIO_SECRET_KEY: password

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'

      - name: AWS S3 StatusChecker Test
        env:
          RUN_INTEGRATION_TEST: true
          S3_ACCESS_KEY_ID: root
          S3_SECRET_ACCESS_KEY: password
        run: ./gradlew extensions:aws:s3:s3-provision:check

  Daps-Integration-Test:
    runs-on: ubuntu-latest

    steps:
      - name: reset permissions to permit checkout (because the omejdn volumes)
        run: sudo chown -R $USER:$USER ${{ github.workspace }}

      - uses: actions/checkout@v2

      - run: docker run -d --rm -p 4567:4567 -v ${{ github.workspace }}/extensions/iam/daps/src/test/resources/config:/opt/config -v ${{ github.workspace }}/extensions/iam/daps/src/test/resources/keys:/opt/keys ghcr.io/fraunhofer-aisec/omejdn-server:1.3.1

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'

      - name: Daps Integration Test
        env:
          RUN_INTEGRATION_TEST: true
        run: ./gradlew clean extensions:iam:daps:check