openapi: 3.0.1
paths:
  /policydefinitions:
    get:
      deprecated: true
      description: Returns all policy definitions according to a query
      operationId: getAllPolicies
      parameters:
      - in: query
        name: offset
        schema:
          type: integer
          format: int32
          example: null
      - in: query
        name: limit
        schema:
          type: integer
          format: int32
          example: null
      - in: query
        name: filter
        schema:
          type: string
          example: null
      - in: query
        name: sort
        schema:
          type: string
          enum:
          - ASC
          - DESC
          example: null
      - in: query
        name: sortField
        schema:
          type: string
          example: null
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                example: null
                items:
                  $ref: '#/components/schemas/PolicyDefinitionResponseDto'
        "400":
          content:
            application/json:
              schema:
                type: array
                example: null
                items:
                  $ref: '#/components/schemas/ApiErrorDetail'
          description: Request was malformed
      tags:
      - Policy
    post:
      description: Creates a new policy definition
      operationId: createPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyDefinitionRequestDto'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdResponseDto'
          description: policy definition was created successfully. Returns the Policy
            Definition Id and created timestamp
        "400":
          content:
            application/json:
              schema:
                type: array
                example: null
                items:
                  $ref: '#/components/schemas/ApiErrorDetail'
          description: Request body was malformed
        "409":
          content:
            application/json:
              schema:
                type: array
                example: null
                items:
                  $ref: '#/components/schemas/ApiErrorDetail'
          description: "Could not create policy definition, because a contract definition\
            \ with that ID already exists"
      tags:
      - Policy
  /policydefinitions/request:
    post:
      description: Returns all policy definitions according to a query
      operationId: queryAllPolicies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuerySpecDto'
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                example: null
                items:
                  $ref: '#/components/schemas/PolicyDefinitionResponseDto'
        "400":
          content:
            application/json:
              schema:
                type: array
                example: null
                items:
                  $ref: '#/components/schemas/ApiErrorDetail'
          description: Request was malformed
      tags:
      - Policy
  /policydefinitions/{id}:
    delete:
      description: "Removes a policy definition with the given ID if possible. Deleting\
        \ a policy definition is only possible if that policy definition is not yet\
        \ referenced by a contract definition, in which case an error is returned.\
        \ DANGER ZONE: Note that deleting policy definitions can have unexpected results,\
        \ do this at your own risk!"
      operationId: deletePolicy
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          example: null
      responses:
        "200":
          description: Policy definition was deleted successfully
        "400":
          content:
            application/json:
              schema:
                type: array
                example: null
                items:
                  $ref: '#/components/schemas/ApiErrorDetail'
          description: "Request was malformed, e.g. id was null"
        "404":
          content:
            application/json:
              schema:
                type: array
                example: null
                items:
                  $ref: '#/components/schemas/ApiErrorDetail'
          description: An policy definition with the given ID does not exist
        "409":
          content:
            application/json:
              schema:
                type: array
                example: null
                items:
                  $ref: '#/components/schemas/ApiErrorDetail'
          description: "The policy definition cannot be deleted, because it is referenced\
            \ by a contract definition"
      tags:
      - Policy
    get:
      description: Gets a policy definition with the given ID
      operationId: getPolicy
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          example: null
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyDefinitionResponseDto'
          description: The  policy definition
        "400":
          content:
            application/json:
              schema:
                type: array
                example: null
                items:
                  $ref: '#/components/schemas/ApiErrorDetail'
          description: "Request was malformed, e.g. id was null"
        "404":
          content:
            application/json:
              schema:
                type: array
                example: null
                items:
                  $ref: '#/components/schemas/ApiErrorDetail'
          description: An  policy definition with the given ID does not exist
      tags:
      - Policy
  /policydefinitions/{policyId}:
    put:
      description: "Updates an existing Policy, If the Policy is not found, no further\
        \ action is taken"
      operationId: updatePolicy
      parameters:
      - in: path
        name: policyId
        required: true
        schema:
          type: string
          example: null
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyDefinitionUpdateDto'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: policy definition was updated successfully. Returns the Policy
            Definition Id and updated timestamp
        "400":
          content:
            application/json:
              schema:
                type: array
                example: null
                items:
                  $ref: '#/components/schemas/ApiErrorDetail'
          description: Request body was malformed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: "policy definition could not be updated, because it does not\
            \ exists"
      tags:
      - Policy
components:
  schemas:
    Action:
      type: object
      example: null
      properties:
        constraint:
          $ref: '#/components/schemas/Constraint'
        includedIn:
          type: string
          example: null
        type:
          type: string
          example: null
    ApiErrorDetail:
      type: object
      example: null
      properties:
        invalidValue:
          type: string
          example: null
        message:
          type: string
          example: null
        path:
          type: string
          example: null
        type:
          type: string
          example: null
    Constraint:
      type: object
      discriminator:
        propertyName: edctype
      example: null
      properties:
        edctype:
          type: string
          example: null
      required:
      - edctype
    CriterionDto:
      type: object
      example: null
      properties:
        operandLeft:
          type: object
          example: null
        operandRight:
          type: object
          example: null
        operator:
          type: string
          example: null
      required:
      - operandLeft
      - operator
    Duty:
      type: object
      example: null
      properties:
        action:
          $ref: '#/components/schemas/Action'
        assignee:
          type: string
          example: null
        assigner:
          type: string
          example: null
        consequence:
          $ref: '#/components/schemas/Duty'
        constraints:
          type: array
          example: null
          items:
            $ref: '#/components/schemas/Constraint'
        parentPermission:
          $ref: '#/components/schemas/Permission'
        target:
          type: string
          example: null
        uid:
          type: string
          example: null
    EntityTag:
      type: object
      example: null
      properties:
        value:
          type: string
          example: null
        weak:
          type: boolean
          example: null
    IdResponseDto:
      type: object
      example: null
      properties:
        createdAt:
          type: integer
          format: int64
          example: null
        id:
          type: string
          example: null
    Link:
      type: object
      example: null
      properties:
        params:
          type: object
          additionalProperties:
            type: string
            example: null
          example: null
        rel:
          type: string
          example: null
        rels:
          type: array
          example: null
          items:
            type: string
            example: null
        title:
          type: string
          example: null
        type:
          type: string
          example: null
        uri:
          type: string
          format: uri
          example: null
        uriBuilder:
          $ref: '#/components/schemas/UriBuilder'
    MediaType:
      type: object
      example: null
      properties:
        parameters:
          type: object
          additionalProperties:
            type: string
            example: null
          example: null
        subtype:
          type: string
          example: null
        type:
          type: string
          example: null
        wildcardSubtype:
          type: boolean
          example: null
        wildcardType:
          type: boolean
          example: null
    MultivaluedMapStringObject:
      type: object
      additionalProperties:
        type: array
        example: null
        items:
          type: object
          example: null
      example: null
      properties:
        empty:
          type: boolean
          example: null
    MultivaluedMapStringString:
      type: object
      additionalProperties:
        type: array
        example: null
        items:
          type: string
          example: null
      example: null
      properties:
        empty:
          type: boolean
          example: null
    NewCookie:
      type: object
      example: null
      properties:
        comment:
          type: string
          example: null
        domain:
          type: string
          example: null
        expiry:
          type: string
          format: date-time
          example: null
        httpOnly:
          type: boolean
          example: null
        maxAge:
          type: integer
          format: int32
          example: null
        name:
          type: string
          example: null
        path:
          type: string
          example: null
        sameSite:
          type: string
          enum:
          - NONE
          - LAX
          - STRICT
          example: null
        secure:
          type: boolean
          example: null
        value:
          type: string
          example: null
        version:
          type: integer
          format: int32
          example: null
    Permission:
      type: object
      example: null
      properties:
        action:
          $ref: '#/components/schemas/Action'
        assignee:
          type: string
          example: null
        assigner:
          type: string
          example: null
        constraints:
          type: array
          example: null
          items:
            $ref: '#/components/schemas/Constraint'
        duties:
          type: array
          example: null
          items:
            $ref: '#/components/schemas/Duty'
        target:
          type: string
          example: null
        uid:
          type: string
          example: null
    Policy:
      type: object
      example: null
      properties:
        '@type':
          type: string
          enum:
          - SET
          - OFFER
          - CONTRACT
          example: null
        assignee:
          type: string
          example: null
        assigner:
          type: string
          example: null
        extensibleProperties:
          type: object
          additionalProperties:
            type: object
            example: null
          example: null
        inheritsFrom:
          type: string
          example: null
        obligations:
          type: array
          example: null
          items:
            $ref: '#/components/schemas/Duty'
        permissions:
          type: array
          example: null
          items:
            $ref: '#/components/schemas/Permission'
        prohibitions:
          type: array
          example: null
          items:
            $ref: '#/components/schemas/Prohibition'
        target:
          type: string
          example: null
    PolicyDefinitionRequestDto:
      type: object
      example: null
      properties:
        id:
          type: string
          example: null
        policy:
          $ref: '#/components/schemas/Policy'
      required:
      - policy
    PolicyDefinitionResponseDto:
      type: object
      example: null
      properties:
        createdAt:
          type: integer
          format: int64
          example: null
        id:
          type: string
          example: null
        policy:
          $ref: '#/components/schemas/Policy'
      required:
      - policy
    PolicyDefinitionUpdateDto:
      type: object
      example: null
      properties:
        policy:
          $ref: '#/components/schemas/Policy'
      required:
      - policy
    Prohibition:
      type: object
      example: null
      properties:
        action:
          $ref: '#/components/schemas/Action'
        assignee:
          type: string
          example: null
        assigner:
          type: string
          example: null
        constraints:
          type: array
          example: null
          items:
            $ref: '#/components/schemas/Constraint'
        target:
          type: string
          example: null
        uid:
          type: string
          example: null
    QuerySpecDto:
      type: object
      example: null
      properties:
        filter:
          type: string
          example: null
        filterExpression:
          type: array
          example: null
          items:
            $ref: '#/components/schemas/CriterionDto'
        limit:
          type: integer
          format: int32
          example: null
        offset:
          type: integer
          format: int32
          example: null
        sortField:
          type: string
          example: null
        sortOrder:
          type: string
          enum:
          - ASC
          - DESC
          example: null
    Response:
      type: object
      example: null
      properties:
        allowedMethods:
          type: array
          example: null
          items:
            type: string
            example: null
          uniqueItems: true
        closed:
          type: boolean
          example: null
        cookies:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/NewCookie'
          example: null
        date:
          type: string
          format: date-time
          example: null
        entity:
          type: object
          example: null
        entityTag:
          $ref: '#/components/schemas/EntityTag'
        headers:
          type: object
          additionalProperties:
            type: array
            example: null
            items:
              type: object
              example: null
          example: null
          properties:
            empty:
              type: boolean
              example: null
        language:
          type: object
          example: null
          properties:
            country:
              type: string
              example: null
            displayCountry:
              type: string
              example: null
            displayLanguage:
              type: string
              example: null
            displayName:
              type: string
              example: null
            displayScript:
              type: string
              example: null
            displayVariant:
              type: string
              example: null
            extensionKeys:
              type: array
              example: null
              items:
                type: string
                example: null
              uniqueItems: true
            iso3Country:
              type: string
              example: null
            iso3Language:
              type: string
              example: null
            language:
              type: string
              example: null
            script:
              type: string
              example: null
            unicodeLocaleAttributes:
              type: array
              example: null
              items:
                type: string
                example: null
              uniqueItems: true
            unicodeLocaleKeys:
              type: array
              example: null
              items:
                type: string
                example: null
              uniqueItems: true
            variant:
              type: string
              example: null
        lastModified:
          type: string
          format: date-time
          example: null
        length:
          type: integer
          format: int32
          example: null
        links:
          type: array
          example: null
          items:
            $ref: '#/components/schemas/Link'
          uniqueItems: true
        location:
          type: string
          format: uri
          example: null
        mediaType:
          $ref: '#/components/schemas/MediaType'
        metadata:
          type: object
          additionalProperties:
            type: array
            example: null
            items:
              type: object
              example: null
          example: null
          properties:
            empty:
              type: boolean
              example: null
        status:
          type: integer
          format: int32
          example: null
        statusInfo:
          $ref: '#/components/schemas/StatusType'
        stringHeaders:
          type: object
          additionalProperties:
            type: array
            example: null
            items:
              type: string
              example: null
          example: null
          properties:
            empty:
              type: boolean
              example: null
    StatusType:
      type: object
      example: null
      properties:
        family:
          type: string
          enum:
          - INFORMATIONAL
          - SUCCESSFUL
          - REDIRECTION
          - CLIENT_ERROR
          - SERVER_ERROR
          - OTHER
          example: null
        reasonPhrase:
          type: string
          example: null
        statusCode:
          type: integer
          format: int32
          example: null
    UriBuilder:
      type: object
      example: null
