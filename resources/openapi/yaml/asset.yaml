openapi: 3.0.1
paths:
  /assets:
    get:
      operationId: getAllAssets
      parameters:
      - name: offset
        in: query
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
      - name: filter
        in: query
        schema:
          type: string
      - name: sort
        in: query
        schema:
          type: string
          enum:
          - ASC
          - DESC
      - name: sortField
        in: query
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssetDto'
    post:
      operationId: createAsset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetEntryDto'
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /assets/{id}:
    get:
      operationId: getAsset
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetDto'
    delete:
      operationId: removeAsset
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /assets/{id}/transfer:
    post:
      operationId: initiateTransfer
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferRequestDto'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
components:
  schemas:
    AssetDto:
      type: object
      properties:
        properties:
          type: object
          additionalProperties:
            type: object
    AssetEntryDto:
      type: object
      properties:
        asset:
          $ref: '#/components/schemas/AssetDto'
        dataAddress:
          $ref: '#/components/schemas/DataAddressDto'
    DataAddressDto:
      type: object
      properties:
        properties:
          type: object
          additionalProperties:
            type: object
    DataAddress:
      type: object
      properties:
        properties:
          type: object
          additionalProperties:
            type: string
    TransferRequestDto:
      type: object
      properties:
        connectorAddress:
          type: string
        contractId:
          type: string
        dataDestination:
          $ref: '#/components/schemas/DataAddress'
        managedResources:
          type: boolean
        properties:
          type: object
          additionalProperties:
            type: string
        transferType:
          $ref: '#/components/schemas/TransferType'
        protocol:
          type: string
        connectorId:
          type: string
    TransferType:
      type: object
      properties:
        contentType:
          type: string
        isFinite:
          type: boolean
